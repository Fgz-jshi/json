<?xml version="1.0" encoding="utf-8"?>
<abapGit version="v1.0.0" serializer="LCL_OBJECT_CLAS" serializer_version="v1.0.0">
 <asx:abap xmlns:asx="http://www.sap.com/abapxml" version="1.0">
  <asx:values>
   <VSEOCLASS>
    <CLSNAME>ZUI2_JSON</CLSNAME>
    <LANGU>E</LANGU>
    <DESCRIPT>JSON converter</DESCRIPT>
    <STATE>1</STATE>
    <CLSCCINCL>X</CLSCCINCL>
    <FIXPT>X</FIXPT>
    <UNICODE>X</UNICODE>
    <WITH_UNIT_TESTS>X</WITH_UNIT_TESTS>
   </VSEOCLASS>
   <DESCRIPTIONS>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>BOOL</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>2 state boolean type (&apos;X&apos; - true, &apos;&apos; - false), as abap_bool</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>BOOL_TO_TRIBOOL</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Convertes 2 state bool to 3 state bool</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>CLASS_CONSTRUCTOR</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>CLASS_CONSTRUCTOR</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>CONSTRUCTOR</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>CONSTRUCTOR</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>DESERIALIZE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Serializes object</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>DESERIALIZE_INT</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Deserializes ABAP object from JSON</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>DUMP</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Recursive conversion</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>DUMP_INT</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Recursive conversion</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>DUMP_SYMBOLS</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Dump to JSON symbol table</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>DUMP_TYPE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Dumps elementary type to string</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>DUMP_TYPE_EX</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Dumps elementary type to string (no type description needed)</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>ESCAPE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Escapes JSON String</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>GENERATE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Generates ABAP object from JSON</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>GENERATE_INT</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Generates ABAP object from JSON</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>GENERATE_INT_EX</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Generates ABAP object from JSON</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>GET_FIELDS</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Prepares structure fields cache</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>GET_SYMBOLS</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Alternative impl. of CL_ABAP_STRUCTDESCR=&gt;GET_SYMBOLS_TAB</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>IS_COMPRESSABLE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Check if initial field shall be compressed</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>JSON</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>JSON string</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>MC_JSON_TYPE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Absolute name of JSON string type</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>MC_KEY_SEPARATOR</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Separator inserted between parts of compound keys</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>MC_ME_TYPE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>The class name</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>MV_ASSOC_ARRAYS</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Serialize tables with unique keys as associative array</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>MV_ASSOC_ARRAYS_OPT</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Optimize rendering of name value maps</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>MV_EXPAND_INCLUDES</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Expand named includes in structures</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>MV_EXTENDED</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>The class is used as based class</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>MV_NUMC_AS_STRING</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Dump NUMC fields as strings</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>MV_STRICT_MODE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Stop further processing on error</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>MV_TS_AS_ISO8601</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Dump timestamps as string in ISO8601 format</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>NAME_MAPPING</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>ABAP&lt;-&gt;JSON Name Mapping</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>NAME_MAPPINGS</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>ABAP&lt;-&gt;JSON Name Mapping Table</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>PRETTY_NAME</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>PrettyPrint names</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>PRETTY_NAME_EX</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>PrettyPrint names in extended form</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>PRETTY_NAME_MODE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Name conversion mode</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>RAW_TO_STRING</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Converts XSTRING to STRING</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>RESTORE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Deserialize JSON to ABAP</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>RESTORE_TYPE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Deserialize JSON to ABAP</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>SERIALIZE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Serializes object</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>SERIALIZE_INT</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Serializes ABAP object to JSON</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>STRING_TO_RAW</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Converts STRING to XSTRING</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>STRING_TO_XSTRING</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Converts XSTRING data to STRING</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>SV_WHITE_SPACE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>White space characters</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>TRIBOOL</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>3 state boolean type (&apos;X&apos;-true, &apos;-&apos;-false, &apos;&apos;-undefined)</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>TRIBOOL_TO_BOOL</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Convertes 3 state bool to 2 state bool</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>T_S_SYMBOL</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Helper type for structure fields iteration</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>T_T_SYMBOL</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Standard table of T_S_SYMBOL</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>VERSION</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Version of the parser logic</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZUI2_JSON</CLSNAME>
     <CMPNAME>XSTRING_TO_STRING</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Converts XSTRING data to STRING</DESCRIPT>
    </SEOCOMPOTX>
   </DESCRIPTIONS>
  </asx:values>
 </asx:abap>
</abapGit>
